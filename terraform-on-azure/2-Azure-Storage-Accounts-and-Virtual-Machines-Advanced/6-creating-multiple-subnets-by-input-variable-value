1. Creates 4 files like below - networking.tf, locals.tf, provider.tf and variables.tf

2. Run below commands by passing variable value in terraform command:
terraform plan -out main.tfplan -var="number_of_subnets=3"
terraform apply main.tfplan

networking.tf
==============
resource "azurerm_resource_group" "appgrp" {
  name     = local.resource_group_name
  location = local.location
}

resource "azurerm_virtual_network" "appnetwork" {
  name                = local.virtual_network.name
  location            = local.location
  resource_group_name = local.resource_group_name
  address_space       = [local.virtual_network.address_space]
  depends_on = [
    azurerm_resource_group.appgrp
   ]
}

resource "azurerm_subnet" "subnets" {
  count=var.number_of_subnets
  name                 = "Subnet${count.index}"
  resource_group_name  = local.resource_group_name
  virtual_network_name = local.virtual_network.name
  address_prefixes     = ["10.0.${count.index}.0/24"]
  depends_on = [
    azurerm_virtual_network.appnetwork
   ]
}

locals.tf
=========
locals {
  resource_group_name="app-grp"
  location="Central India"
  virtual_network={
    name="app-network"
    address_space="10.0.0.0/16"
  }
}

provider.tf
===========
terraform {
  required_providers {
    azurerm = {
      source = "hashicorp/azurerm"
      version = "3.57.0"
    }
  }
}

provider "azurerm" {
  subscription_id = "XXXXX"
  tenant_id = "XXXXX"
  client_id = "XXXXX"
  client_secret = "XXXXX"
  features {}
}

variables.tf
============
variable "number_of_subnets" {
    type=number
    description="This defines the number of subnets"
    default=2
    validation {
      condition = var.number_of_subnets < 5
      error_message = "The number of subnets must be less than 5."
    }
}
